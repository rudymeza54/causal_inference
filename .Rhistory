kable_styling(full_width = F, fixed_thead = T) %>%
row_spec(which(dat2$books == 1), bold = T, col = "black")
options(kableExtra.html.bsTable = T)
dat2 %>%
mutate(distance = cell_spec(distance, "html", background = ifelse(distance ==  min(distance[distance != 0]), "#FFCC00", "#FFFFFF"))) %>%
kable(format = "html", escape = F, caption = "Distances from student #5") %>%
kable_styling(full_width = F, fixed_thead = T) %>%
row_spec(which(dat2$books == 1), bold = T, col = "black")%>%
arrange(distance)
options(kableExtra.html.bsTable = T)
dat2 %>%
mutate(distance = cell_spec(distance, "html", background = ifelse(distance ==  min(distance[distance != 0]), "#FFCC00", "#FFFFFF"))) %>%
kable(format = "html", escape = F, caption = "Distances from student #5") %>%
kable_styling(full_width = F, fixed_thead = T) %>%
row_spec(which(dat2$books == 1), bold = T, col = "black")
dat2
dat2%>%
arrange(distance)
dat2%>%
arrange(distance)%>%
slice(1:10)
matched<-dat2%>%
arrange(distance)%>%
slice(1:10)
compare_means( df=dat         ) %>% pander()
compare_means( df=matched ) %>% pander()
df3 = round(df[15:19,], 2)
df3 = df3[,c(5,1,6)]
df3 = as.data.frame(df3[order(df3$school, decreasing = T), ])
#df3$distance = df3[3,6] - df3$prop_score
View(df3)
options(kableExtra.html.bsTable = T)
df3 %>%
# mutate(distance = cell_spec(
#distance, "html", background = ifelse(distance ==  min(distance[distance != 0]), "#FFCC00", "#FFFFFF"))) %>%
#mutate(Caliper_Distance = cell_spec(
#Caliper_Distance, "html", background = ifelse(Caliper_Distance ==  "MATCH", "#00CC00", "#FF0000"), bold = T)) %>%
kable(format = "html", escape = F, caption = "Caliper Distance from student #5") %>%
kable_styling(full_width = F, fixed_thead = T) %>%
row_spec(which(df3$school == 1), bold = T, col = "black")
df3$distance_14 = ifelse(df3$school == 1, df3$prop_score - df3$prop_score[df3$student == "14"], NA)
df3$distance_14 = round(abs(df3$distance_14), 2)
df3$distance_6 = ifelse(df3$school == 1, df3$prop_score - df3$prop_score[df3$student == "6"], NA)
df3$distance_6 = round(abs(df3$distance_6), 2)
df3$WithReplacement = c(14, 6, 6, NA, NA)
df3$WithoutReplacement = c( "", 6, 14, NA, NA)
options(kableExtra.html.bsTable = T)
df3 %>%
mutate(WithReplacement = cell_spec(
WithReplacement, "html", background = c("#FFCC00", "#00CC00", "#00CC00", "#FFFFFF", "#FFFFFF"))) %>%
mutate(WithoutReplacement = cell_spec(
WithoutReplacement, "html", background = c("#FFFFFF", "#00CC00", "#FFCC00", "#FFFFFF", "#FFFFFF"))) %>%
kable(format = "html", escape = F, caption = "Assignment with or without replacement") %>%
kable_styling(full_width = F, fixed_thead = T) %>%
row_spec(which(df3$school == 1), bold = T, col = "black")
# add ids of all matched 'twins'
ids <- c(21,17,16,18,14)
subset<-dat%>%
filter(books ==0)
dat2<-dat %>%
filter(id %in% ids)%>%
bind_rows(subset)
dat2%>%
pander()
rownames(dat2)<-NULL
dat2  %>%
kable(caption = "Close Matches with Propensity Scores", format = "html", escape = F) %>%
kable_styling(full_width = F, fixed_thead = T) %>%
row_spec(which(dat2$books == 1), bold = T, col = "black")
dat2$distance = abs(dat2$p.score[dat2$books==1] - dat2$p.score)
options(kableExtra.html.bsTable = T)
dat2 %>%
mutate(distance = cell_spec(distance, "html", background = ifelse(distance ==  min(distance[distance != 0]), "#FFCC00", "#FFFFFF"))) %>%
kable(format = "html", escape = F, caption = "Distances from student #5") %>%
kable_styling(full_width = F, fixed_thead = T) %>%
row_spec(which(dat2$books == 1), bold = T, col = "black")
options(kableExtra.html.bsTable = T)
df2$distance_21 = ifelse(df2$book == 1, df2$p.score - df2$p.score[df2$book == "21"], NA)
options(kableExtra.html.bsTable = T)
dat2$distance_21 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$book == "21"], NA)
dat2$distance_21 = round(abs(dat2$distance_21), 2)
dat2$distance_17 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$book == "17"], NA)
dat2$distance_17 = round(abs(dat2$distance_17), 2)
View(dat2)
options(kableExtra.html.bsTable = T)
dat2$distance_21 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id == "21"], NA)
dat2$distance_21 = round(abs(dat2$distance_21), 2)
dat2$distance_17 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id== "17"], NA)
dat2$distance_17 = round(abs(dat2$distance_17), 2)
View(dat2)
# add ids of all matched 'twins'
ids <- c(21,22,17,20,19,16,18,15,14,12)
dat2<-dat %>%
filter(id %in% ids)
dat2%>%
pander()
rownames(dat2)<-NULL
dat2  %>%
kable(caption = "Close Matches with Propensity Scores", format = "html", escape = F) %>%
kable_styling(full_width = F, fixed_thead = T) %>%
row_spec(which(dat2$books == 1), bold = T, col = "black")
dat2$distance = abs(dat2$p.score[dat2$books==1] - dat2$p.score)
options(kableExtra.html.bsTable = T)
dat2$distance_21 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id == "21"], NA)
dat2$distance_21 = round(abs(dat2$distance_21), 2)
dat2$distance_17 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id== "17"], NA)
dat2$distance_17 = round(abs(dat2$distance_17), 2)
options(kableExtra.html.bsTable = T)
dat2$distance_21 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id == "21"], NA)
dat2$distance_21 = round(abs(dat2$distance_21), 2)
dat2$distance_17 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id== "17"], NA)
dat2$distance_17 = round(abs(dat2$distance_17), 2)
dat2$distance_16 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id== "16"], NA)
dat2$distance_16 = round(abs(dat2$distance_16), 2)
options(kableExtra.html.bsTable = T)
dat2$distance_21 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id == "21"], NA)
dat2$distance_21 = round(abs(dat2$distance_21), 2)
dat2$distance_17 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id== "17"], NA)
dat2$distance_17 = round(abs(dat2$distance_17), 2)
dat2$distance_16 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id== "16"], NA)
dat2$distance_16 = round(abs(dat2$distance_16), 2)
dat2$distance_18 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id== "18"], NA)
dat2$distance_18 = round(abs(dat2$distance_18), 2)
dat2$distance_14 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id== "14"], NA)
dat2$distance_14 = round(abs(dat2$distance_14), 2)
# add ids of all matched 'twins'
ids <- c(21,22,17,20,19,16,18,15,14,12)
dat2<-dat %>%
filter(id %in% ids)
dat2%>%
pander()
compare_means <- function( df )
{
options( scipen=8 )
vars <- c("movies", "fiction", "scifi", "children",
"male", "age", "white", "black", "asian")
results <- NULL
loop.count <- 1
for( i in vars )
{
x <- i
ttest <- t.test( get(x) ~ books, data=df )
control    <- as.numeric( ttest$estimate[1] ) %>% round(2)
treatment  <- as.numeric( ttest$estimate[2] ) %>% round(2)
diff       <- ( treatment - control ) %>% round(2)
p.value    <- ttest$p.value %>% round(5)
ci.lower   <- ttest$conf.int[1] %>% round(2)
ci.upper   <- ttest$conf.int[2] %>% round(2)
new.row <- cbind( variable=i, treatment, control, diff, p.value, ci.lower, ci.upper )
results <- rbind( results, new.row )
}
t <- table( df$books )
results <- rbind( results, c("n",as.numeric( t[2] ), as.numeric( t[1] ), "","","","" ) )
return( as.data.frame( results ) )
}
compare_means( dat) %>% pander()
compare_means( df=dat         ) %>% pander()
compare_means( df=dat2 ) %>% pander()
# add ids of all matched 'twins'
ids <- c(21,22,17,20,19,16,18,15,14,12)
dat2<-dat %>%
filter(id %in% ids)
dat2%>%
pander()
rownames(dat2)<-NULL
dat2  %>%
kable(caption = "Close Matches with Propensity Scores", format = "html", escape = F) %>%
kable_styling(full_width = F, fixed_thead = T) %>%
row_spec(which(dat2$books == 1), bold = T, col = "black")
options(kableExtra.html.bsTable = T)
dat2$distance_21 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id == "21"], NA)
dat2$distance_21 = round(abs(dat2$distance_21), 2)
rownames(dat2)<-NULL
dat2  %>%
kable(caption = "Close Matches with Propensity Scores", format = "html", escape = F) %>%
kable_styling(full_width = F, fixed_thead = T) %>%
row_spec(which(dat2$books == 1), bold = T, col = "black")
# add ids of all matched 'twins'
ids <- c(21,22,17,20,19,16,18,15,14,12)
dat2<-dat %>%
filter(id %in% ids)
dat2%>%
pander()
rownames(dat2)<-NULL
dat2  %>%
kable(caption = "Close Matches with Propensity Scores", format = "html", escape = F) %>%
kable_styling(full_width = F, fixed_thead = T) %>%
row_spec(which(dat2$books == 1), bold = T, col = "black")
options(kableExtra.html.bsTable = T)
dat2$distance_22 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id == "22"], NA)
dat2$distance_22 = round(abs(dat2$distance_22), 2)
dat2$distance_20 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id== "20"], NA)
dat2$distance_20 = round(abs(dat2$distance_20), 2)
dat2$distance_19 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id== "19"], NA)
dat2$distance_19 = round(abs(dat2$distance_19), 2)
dat2$distance_15 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id== "15"], NA)
dat2$distance_15 = round(abs(dat2$distance_15), 2)
options(kableExtra.html.bsTable = T)
dat2$distance_22 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id == "22"], NA)
dat2$distance_22 = round(abs(dat2$distance_22), 2)
dat2$distance_20 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id== "20"], NA)
dat2$distance_20 = round(abs(dat2$distance_20), 2)
dat2$distance_19 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id== "19"], NA)
dat2$distance_19 = round(abs(dat2$distance_19), 2)
dat2$distance_15 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id== "15"], NA)
dat2$distance_15 = round(abs(dat2$distance_15), 2)
dat2$distance_12 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id== "12"], NA)
dat2$distance_12 = round(abs(dat2$distance_12), 2)
options(kableExtra.html.bsTable = T)
dat2$distance_24 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id == "24"], NA)
dat2$distance_24 = round(abs(dat2$distance_24), 2)
dat2$distance_22 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id == "22"], NA)
dat2$distance_22 = round(abs(dat2$distance_22), 2)
dat2$distance_20 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id== "20"], NA)
dat2$distance_20 = round(abs(dat2$distance_20), 2)
dat2$distance_19 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id== "19"], NA)
dat2$distance_19 = round(abs(dat2$distance_19), 2)
dat2$distance_15 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id== "15"], NA)
dat2$distance_15 = round(abs(dat2$distance_15), 2)
dat2$distance_12 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id== "12"], NA)
dat2$distance_12 = round(abs(dat2$distance_12), 2)
# add ids of all matched 'twins'
ids <- c(24,21,22,17,20,19,16,18,15,14,12)
dat2<-dat %>%
filter(id %in% ids)
dat2%>%
pander()
rownames(dat2)<-NULL
dat2  %>%
kable(caption = "Close Matches with Propensity Scores", format = "html", escape = F) %>%
kable_styling(full_width = F, fixed_thead = T) %>%
row_spec(which(dat2$books == 1), bold = T, col = "black")
options(kableExtra.html.bsTable = T)
dat2$distance_24 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id == "24"], NA)
dat2$distance_24 = round(abs(dat2$distance_24), 2)
dat2$distance_22 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id == "22"], NA)
dat2$distance_22 = round(abs(dat2$distance_22), 2)
dat2$distance_20 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id== "20"], NA)
dat2$distance_20 = round(abs(dat2$distance_20), 2)
dat2$distance_19 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id== "19"], NA)
dat2$distance_19 = round(abs(dat2$distance_19), 2)
dat2$distance_15 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id== "15"], NA)
dat2$distance_15 = round(abs(dat2$distance_15), 2)
dat2$distance_12 = ifelse(dat2$book == 1, dat2$p.score - dat2$p.score[dat2$id== "12"], NA)
dat2$distance_12 = round(abs(dat2$distance_12), 2)
dat2
dat2<-dat2%>%
arrange(desc(books))
dat2$WithoutReplacement = c( "", 22, 19, 24, 15,12,NA,NA,NA,NA,NA,NA)
dat2$WithoutReplacement = c( "", 22, 19, 24, 15,12,NA,NA,NA,NA,NA)
matched<-dat2
compare_means( df=dat         ) %>% pander()
compare_means( df=dat2 ) %>% pander()
compare_means( dat2 ) %>% pander()
compare_means( df=dat ) %>% pander()
compare_means( dat2 ) %>% pander()
these <- c("id", "p.score", "books", "movies", "fiction", "scifi", "children",
"male", "age", "race")
dd <- dat[ 26:27, these ]
rownames( dd ) <- NULL
dd %>% pander()
compare_means(df3)
t.test(m1data$y_educ[m1data$school==1], m1data$y_educ[m1data$school==0], paired = T)
t.test(df3$student[df3$school==1], df3$student[df3$school==0])
dat4<-dat3[,col.order]
dat4<-dat2[,col.order]
dat2
dat2[,col.order]
dat4<-dat2[,col.order]%>%
select_if(., is,numeric)
dat4<-dat2[,col.order]%>%
select_if(., is.numeric)
dat4
dat4<-dat4[,3:length(colnames(dat4))]
View(dat4)
?pivot_longer
library(rstatix)
dat4<-dat2[,col.order]%>%
select_if(., is.numeric)
dat4<-dat4[,3:length(colnames(dat4))]%>%
pivot_longer(
!books,
names_to = "var",
values_to = "value"
)
View(dat4)
dat4 %>%
group_by(var)%>%
t_test(value ~ books)%>%
adjust_pvalue(method = "bonferroni")%>%
add_significance()%>%
filter(p.adj.signif=="ns")
t.test.
t.test
t_test
print.t.test
t.test
method(t.test)
getMethod(t.test)
m1 = matchit(df$school ~ df$income + df$occ_score + df$y_educ, method = "nearest", data = df)
m1data = match.data(m1)
View(m1data)
?matchit
m1_lab = matchit(books~., method = "nearest", data = dat)
m1_data<-match.data(m1_lab)
View(m1_data)
m1_lab = matchit(books~., method = "nearest", data = dat, replace = F)
m1_data<-match.data(m1_lab)
View(m1_data)
m1_data%>%
group_by(books)%>%
count()
library(rstatix)
dat4<-m1_data[,col.order]%>%
select_if(., is.numeric)
dat4<-dat4[,3:length(colnames(dat4))]%>%
pivot_longer(
!books,
names_to = "var",
values_to = "value"
)
dat4 %>%
group_by(var)%>%
t_test(value ~ books)%>%
adjust_pvalue(method = "bonferroni")%>%
add_significance()%>%
filter(p.adj.signif=="ns")
compare_means( df=dat ) %>% pander()
compare_means( dat4 ) %>% pander()
library(rstatix)
dat4<-m1_data[,col.order]%>%
select_if(., is.numeric)
dat5<-dat4[,3:length(colnames(dat4))]%>%
pivot_longer(
!books,
names_to = "var",
values_to = "value"
)
dat5 %>%
group_by(var)%>%
t_test(value ~ books)%>%
adjust_pvalue(method = "bonferroni")%>%
add_significance()%>%
filter(p.adj.signif=="ns")
compare_means( df=dat ) %>% pander()
compare_means( dat4 ) %>% pander()
View(m1_data)
View(m1_lab)
m1_lab[["match.matrix"]]
# add ids of all matched 'twins'
ids <- c(28,15,27,39,21,30,17,37,16,25,18,26,14,31,13,35,9,32,11,24,10,36,8,20,7,29,6,33,5,22,4,19,3,12,2,23,1,34)
dat2<-dat %>%
filter(id %in% ids)
dat2%>%
pander()
count(dat$books)
dat2%>%
group_by(books)%>%
count()
# add ids of all matched 'twins'
ids <- c(28,15,27,39,21,30,17,37,16,25,18,26,14,31,13,35,9,32,11,24)
dat2<-dat %>%
filter(id %in% ids)
dat2%>%
pander()
dat2%>%
group_by(books)%>%
count()
compare_means <- function( df )
{
options( scipen=8 )
vars <- c("movies", "fiction", "scifi", "children",
"male", "age", "white", "black", "asian")
results <- NULL
loop.count <- 1
for( i in vars )
{
x <- i
ttest <- t.test( get(x) ~ books, data=df )
control    <- as.numeric( ttest$estimate[1] ) %>% round(2)
treatment  <- as.numeric( ttest$estimate[2] ) %>% round(2)
diff       <- ( treatment - control ) %>% round(2)
p.value    <- ttest$p.value %>% round(5)
ci.lower   <- ttest$conf.int[1] %>% round(2)
ci.upper   <- ttest$conf.int[2] %>% round(2)
new.row <- cbind( variable=i, treatment, control, diff, p.value, ci.lower, ci.upper )
results <- rbind( results, new.row )
}
t <- table( df$books )
results <- rbind( results, c("n",as.numeric( t[2] ), as.numeric( t[1] ), "","","","" ) )
return( as.data.frame( results ) )
}
compare_means( dat) %>% pander()
library(rstatix)
dat4<-dat2[,col.order]%>%
select_if(., is.numeric)
dat5<-dat4[,3:length(colnames(dat4))]%>%
pivot_longer(
!books,
names_to = "var",
values_to = "value"
)
dat5 %>%
group_by(var)%>%
t_test(value ~ books)%>%
adjust_pvalue(method = "bonferroni")%>%
add_significance()%>%
filter(p.adj.signif=="ns")
library(rstatix)
dat4<-dat2[,col.order]%>%
select_if(., is.numeric)
dat5<-dat4[,3:length(colnames(dat4))]%>%
pivot_longer(
!books,
names_to = "var",
values_to = "value"
)
dat5 %>%
group_by(var)%>%
t_test(value ~ books)%>%
adjust_pvalue(method = "bonferroni")%>%
add_significance()%>%
filter(p.adj.signif=="ns")
compare_means( df=dat ) %>% pander()
compare_means( dat4 ) %>% pander()
rownames(dat2)<-NULL
dat2  %>%
kable(caption = "Close Matches with Propensity Scores", format = "html", escape = F) %>%
kable_styling(full_width = F, fixed_thead = T) %>%
row_spec(which(dat2$books == 1), bold = T, col = "black")
these <- c("id", "p.score", "books", "movies", "fiction", "scifi", "children",
"male", "age", "race")
dd <- dat[ 26:27, these ]
rownames( dd ) <- NULL
dd %>% pander()
rownames(dat2)<-NULL
dat2  %>%
kable(caption = "Close Matches with Propensity Scores", format = "html", escape = F)
%>%
rownames(dat2)<-NULL
dat2  %>%
kable(caption = "Close Matches with Propensity Scores", format = "html", escape = F)%>%
kable_styling(full_width = F, fixed_thead = T) %>%
row_spec(which(dat2$books == 1), bold = T, col = "black")
rownames(dat2)<-NULL
dat2  %>%
kable(caption = "Close Matches with Propensity Scores", format = "html", escape = F)%>%
kable_styling(full_width = F, fixed_thead = T)
row_spec(which(dat2$books == 1), bold = T, col = "black")
rownames(dat2)<-NULL
dat2  %>%
kable(caption = "Close Matches with Propensity Scores", format = "html", escape = F)%>%
kable_styling(full_width = F, fixed_thead = T) %>%
row_spec(which(dat2$books == 1), bold = T, col = "black")
# install.packages( "MatchIt" )
# install.packages( "rgenoud" )
library( dplyr )
library( pander )
library( stargazer )
library( MatchIt )
library( rgenoud )
knitr::opts_chunk$set(echo = TRUE, message=F, warning=F, fig.width = 10)
knitr::opts_chunk$set(echo = TRUE, message=F, warning=F, fig.width = 10)
# install.packages( "MatchIt" )
# install.packages( "rgenoud" )
library( dplyr )
library( pander )
library( stargazer )
library( MatchIt )
library( rgenoud )
URL <- "https://raw.githubusercontent.com/DS4PS/pe4ps-textbook/master/labs/DATA/harry-potter.csv"
dat <- read.csv( URL, stringsAsFactors=F )
head( dat ) %>% pander()
dat %>%
group_by( books ) %>%
summarize( mean.age = mean(age),
prop.male = mean(male),
prop.fiction = mean(fiction),
prop.scifi = mean(scifi),
prop.movies = mean(movies),
prop.children = mean(children),
prop.white = mean( race == "white" ),
prop.black = mean( race == "black" ),
prop.asian = mean( race == "asian" ) ) %>%
pander( digits=2 )
ps.model <- lm( books ~ movies + fiction + scifi +
children + male + age + asian + black + white,
data=dat )
stargazer( ps.model, digits=2, type="html",
omit.stat = c("f","ser") )
dat$p.score <- ps.model$fitted.values %>% round(3)
col.order <- c( "id", "p.score", "books", "movies", "fiction",
"scifi", "children", "male", "age", "race",
"white","black","asian")
dat <- dat[ col.order ]
head( dat, 15 ) %>% pander()
# add ids of all matched 'twins'
ids <- c(28,15,27,39,21,30,17,37,16,25,18,26,14,31,13,35,9,32,11,24)
dat2<-dat %>%
filter(id %in% ids)
dat2%>%
pander()
dat2%>%
group_by(books)%>%
count()
rownames(dat2)<-NULL
dat2  %>%
kable(caption = "Close Matches with Propensity Scores", format = "html", escape = F) %>%
kable_styling(full_width = F, fixed_thead = T) %>%
row_spec(which(dat2$books == 1), bold = T, col = "black")
?row_spec
?expect_that
