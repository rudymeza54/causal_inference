pivot_longer(
!books,
names_to = "var",
values_to = "value"
)
View(dat4)
dat4 %>%
group_by(var)%>%
t_test(value ~ books)%>%
adjust_pvalue(method = "bonferroni")%>%
add_significance()%>%
filter(p.adj.signif=="ns")
t.test.
t.test
t_test
print.t.test
t.test
method(t.test)
getMethod(t.test)
m1 = matchit(df$school ~ df$income + df$occ_score + df$y_educ, method = "nearest", data = df)
m1data = match.data(m1)
View(m1data)
?matchit
m1_lab = matchit(books~., method = "nearest", data = dat)
m1_data<-match.data(m1_lab)
View(m1_data)
m1_lab = matchit(books~., method = "nearest", data = dat, replace = F)
m1_data<-match.data(m1_lab)
View(m1_data)
m1_data%>%
group_by(books)%>%
count()
library(rstatix)
dat4<-m1_data[,col.order]%>%
select_if(., is.numeric)
dat4<-dat4[,3:length(colnames(dat4))]%>%
pivot_longer(
!books,
names_to = "var",
values_to = "value"
)
dat4 %>%
group_by(var)%>%
t_test(value ~ books)%>%
adjust_pvalue(method = "bonferroni")%>%
add_significance()%>%
filter(p.adj.signif=="ns")
compare_means( df=dat ) %>% pander()
compare_means( dat4 ) %>% pander()
library(rstatix)
dat4<-m1_data[,col.order]%>%
select_if(., is.numeric)
dat5<-dat4[,3:length(colnames(dat4))]%>%
pivot_longer(
!books,
names_to = "var",
values_to = "value"
)
dat5 %>%
group_by(var)%>%
t_test(value ~ books)%>%
adjust_pvalue(method = "bonferroni")%>%
add_significance()%>%
filter(p.adj.signif=="ns")
compare_means( df=dat ) %>% pander()
compare_means( dat4 ) %>% pander()
View(m1_data)
View(m1_lab)
m1_lab[["match.matrix"]]
# add ids of all matched 'twins'
ids <- c(28,15,27,39,21,30,17,37,16,25,18,26,14,31,13,35,9,32,11,24,10,36,8,20,7,29,6,33,5,22,4,19,3,12,2,23,1,34)
dat2<-dat %>%
filter(id %in% ids)
dat2%>%
pander()
count(dat$books)
dat2%>%
group_by(books)%>%
count()
# add ids of all matched 'twins'
ids <- c(28,15,27,39,21,30,17,37,16,25,18,26,14,31,13,35,9,32,11,24)
dat2<-dat %>%
filter(id %in% ids)
dat2%>%
pander()
dat2%>%
group_by(books)%>%
count()
compare_means <- function( df )
{
options( scipen=8 )
vars <- c("movies", "fiction", "scifi", "children",
"male", "age", "white", "black", "asian")
results <- NULL
loop.count <- 1
for( i in vars )
{
x <- i
ttest <- t.test( get(x) ~ books, data=df )
control    <- as.numeric( ttest$estimate[1] ) %>% round(2)
treatment  <- as.numeric( ttest$estimate[2] ) %>% round(2)
diff       <- ( treatment - control ) %>% round(2)
p.value    <- ttest$p.value %>% round(5)
ci.lower   <- ttest$conf.int[1] %>% round(2)
ci.upper   <- ttest$conf.int[2] %>% round(2)
new.row <- cbind( variable=i, treatment, control, diff, p.value, ci.lower, ci.upper )
results <- rbind( results, new.row )
}
t <- table( df$books )
results <- rbind( results, c("n",as.numeric( t[2] ), as.numeric( t[1] ), "","","","" ) )
return( as.data.frame( results ) )
}
compare_means( dat) %>% pander()
library(rstatix)
dat4<-dat2[,col.order]%>%
select_if(., is.numeric)
dat5<-dat4[,3:length(colnames(dat4))]%>%
pivot_longer(
!books,
names_to = "var",
values_to = "value"
)
dat5 %>%
group_by(var)%>%
t_test(value ~ books)%>%
adjust_pvalue(method = "bonferroni")%>%
add_significance()%>%
filter(p.adj.signif=="ns")
library(rstatix)
dat4<-dat2[,col.order]%>%
select_if(., is.numeric)
dat5<-dat4[,3:length(colnames(dat4))]%>%
pivot_longer(
!books,
names_to = "var",
values_to = "value"
)
dat5 %>%
group_by(var)%>%
t_test(value ~ books)%>%
adjust_pvalue(method = "bonferroni")%>%
add_significance()%>%
filter(p.adj.signif=="ns")
compare_means( df=dat ) %>% pander()
compare_means( dat4 ) %>% pander()
rownames(dat2)<-NULL
dat2  %>%
kable(caption = "Close Matches with Propensity Scores", format = "html", escape = F) %>%
kable_styling(full_width = F, fixed_thead = T) %>%
row_spec(which(dat2$books == 1), bold = T, col = "black")
these <- c("id", "p.score", "books", "movies", "fiction", "scifi", "children",
"male", "age", "race")
dd <- dat[ 26:27, these ]
rownames( dd ) <- NULL
dd %>% pander()
rownames(dat2)<-NULL
dat2  %>%
kable(caption = "Close Matches with Propensity Scores", format = "html", escape = F)
%>%
rownames(dat2)<-NULL
dat2  %>%
kable(caption = "Close Matches with Propensity Scores", format = "html", escape = F)%>%
kable_styling(full_width = F, fixed_thead = T) %>%
row_spec(which(dat2$books == 1), bold = T, col = "black")
rownames(dat2)<-NULL
dat2  %>%
kable(caption = "Close Matches with Propensity Scores", format = "html", escape = F)%>%
kable_styling(full_width = F, fixed_thead = T)
row_spec(which(dat2$books == 1), bold = T, col = "black")
rownames(dat2)<-NULL
dat2  %>%
kable(caption = "Close Matches with Propensity Scores", format = "html", escape = F)%>%
kable_styling(full_width = F, fixed_thead = T) %>%
row_spec(which(dat2$books == 1), bold = T, col = "black")
# install.packages( "MatchIt" )
# install.packages( "rgenoud" )
library( dplyr )
library( pander )
library( stargazer )
library( MatchIt )
library( rgenoud )
knitr::opts_chunk$set(echo = TRUE, message=F, warning=F, fig.width = 10)
knitr::opts_chunk$set(echo = TRUE, message=F, warning=F, fig.width = 10)
# install.packages( "MatchIt" )
# install.packages( "rgenoud" )
library( dplyr )
library( pander )
library( stargazer )
library( MatchIt )
library( rgenoud )
URL <- "https://raw.githubusercontent.com/DS4PS/pe4ps-textbook/master/labs/DATA/harry-potter.csv"
dat <- read.csv( URL, stringsAsFactors=F )
head( dat ) %>% pander()
dat %>%
group_by( books ) %>%
summarize( mean.age = mean(age),
prop.male = mean(male),
prop.fiction = mean(fiction),
prop.scifi = mean(scifi),
prop.movies = mean(movies),
prop.children = mean(children),
prop.white = mean( race == "white" ),
prop.black = mean( race == "black" ),
prop.asian = mean( race == "asian" ) ) %>%
pander( digits=2 )
ps.model <- lm( books ~ movies + fiction + scifi +
children + male + age + asian + black + white,
data=dat )
stargazer( ps.model, digits=2, type="html",
omit.stat = c("f","ser") )
dat$p.score <- ps.model$fitted.values %>% round(3)
col.order <- c( "id", "p.score", "books", "movies", "fiction",
"scifi", "children", "male", "age", "race",
"white","black","asian")
dat <- dat[ col.order ]
head( dat, 15 ) %>% pander()
# add ids of all matched 'twins'
ids <- c(28,15,27,39,21,30,17,37,16,25,18,26,14,31,13,35,9,32,11,24)
dat2<-dat %>%
filter(id %in% ids)
dat2%>%
pander()
dat2%>%
group_by(books)%>%
count()
rownames(dat2)<-NULL
dat2  %>%
kable(caption = "Close Matches with Propensity Scores", format = "html", escape = F) %>%
kable_styling(full_width = F, fixed_thead = T) %>%
row_spec(which(dat2$books == 1), bold = T, col = "black")
?row_spec
?expect_that
?github_document
library(tidyverse)
RL <- "https://github.com/DS4PS/Data-Science-Class/blob/master/DATA/TempeTrafficAccidents.rds?raw=true"
dat <- readRDS(gzcon(url( URL )))
URL <- "https://github.com/DS4PS/Data-Science-Class/blob/master/DATA/TempeTrafficAccidents.rds?raw=true"
dat <- readRDS(gzcon(url( URL )))
head( dat )
output<-r"(C:\Users\rudym\OneDrive\Desktop\VS Code\python\data)"
write.csv(file.path(output,dat))
write.csv(dat,file.path(output,"TempeTrafficAccidents.csv"),row.names = F)
library(tidyverse)
X<-rnorm(150)*3
Y<-rnorm(150)
lm(Y~X)
model<-lm(Y~X)
summary(model)
Y<-rgeom(150)
Y<-rlnorm(150)
X<-rnorm(150)*3
model<-lm(Y~X)
summary(model)
data(mpeg)
data(mpg)
View(mpg)
getwd()
library(tidyverse)
library(plm)
library(DT)
library(stargazer)
library(shiny)
library(hrbrthemes)
# FIXED-EFFECTS: TAB 1
# DATA PROCESSING AND READING FOR CAUSAL INFERENCE METHODS
rm(list = ls())
## FIXED-EFFECTS
data(Crime)
df<- Crime
dataCrime<-filter(df,county %in% c(1,3,7,23))
dataCrime_within<-dataCrime %>%
group_by(county) %>%
mutate(crime_within = crmrte - mean(crmrte),
prbarr_within = prbarr - mean(prbarr))
### LM MODEL WITH POOLED VS FIXED-EFFECTS
model_one<-lm(crmrte ~ prbarr, dataCrime)
model_two<-lm(crime_within ~ prbarr_within, dataCrime_within)
# EXTARCT COEFFICIENTS AND OTHER INFO
model_summary_one <- summary(model_one)
coefficients_df_one <- as.data.frame(model_summary_one$coefficients)
# Create a tibble
lm_tibble_one <- tibble(
term = rownames(coefficients_df_one),
estimate = round(coefficients_df_one$Estimate,3),
std_error = round(coefficients_df_one$`Std. Error`,3),
t_value = coefficients_df_one$t.value,
p_value = coefficients_df_one$`Pr(>|t|)`
)
model_summary_two <- summary(model_two)
coefficients_df_two <- as.data.frame(model_summary_two$coefficients)
# Create a tibble
lm_tibble_two <- tibble(
term = rownames(coefficients_df_two),
estimate = round(coefficients_df_two$Estimate,3),
std_error = round(coefficients_df_two$`Std. Error`,3),
t_value = coefficients_df_two$t.value,
p_value = coefficients_df_two$`Pr(>|t|)`
)
# MATCHING: TAB 2
# DATA PROCESSING
df_malaria<-list.files(getwd(),".csv",full.names = T)
malaria_df<-read_csv(df_malaria)
# malaria_df$net<-as.factor(malaria_df$net)
getwd()
df_malaria<-list.files(getwd(),"mosquito_nets.csv",full.names = T)
df_malaria<-list.files(getwd,"mosquito_nets.csv",full.names = T)
paste0(getwd(),"mosquito_nets.csv")
library(tidyverse)
library(plm)
library(DT)
library(stargazer)
library(shiny)
library(hrbrthemes)
# FIXED-EFFECTS: TAB 1
# DATA PROCESSING AND READING FOR CAUSAL INFERENCE METHODS
rm(list = ls())
## FIXED-EFFECTS
data(Crime)
df<- Crime
dataCrime<-filter(df,county %in% c(1,3,7,23))
dataCrime_within<-dataCrime %>%
group_by(county) %>%
mutate(crime_within = crmrte - mean(crmrte),
prbarr_within = prbarr - mean(prbarr))
### LM MODEL WITH POOLED VS FIXED-EFFECTS
model_one<-lm(crmrte ~ prbarr, dataCrime)
model_two<-lm(crime_within ~ prbarr_within, dataCrime_within)
# EXTARCT COEFFICIENTS AND OTHER INFO
model_summary_one <- summary(model_one)
coefficients_df_one <- as.data.frame(model_summary_one$coefficients)
# Create a tibble
lm_tibble_one <- tibble(
term = rownames(coefficients_df_one),
estimate = round(coefficients_df_one$Estimate,3),
std_error = round(coefficients_df_one$`Std. Error`,3),
t_value = coefficients_df_one$t.value,
p_value = coefficients_df_one$`Pr(>|t|)`
)
model_summary_two <- summary(model_two)
coefficients_df_two <- as.data.frame(model_summary_two$coefficients)
# Create a tibble
lm_tibble_two <- tibble(
term = rownames(coefficients_df_two),
estimate = round(coefficients_df_two$Estimate,3),
std_error = round(coefficients_df_two$`Std. Error`,3),
t_value = coefficients_df_two$t.value,
p_value = coefficients_df_two$`Pr(>|t|)`
)
# MATCHING: TAB 2
# DATA PROCESSING
df_malaria<-list.files(getwd(),"/mosquito_nets.csv",full.names = T)
malaria_df<-read_csv(df_malaria)
# malaria_df$net<-as.factor(malaria_df$net)
library(tidyverse)
library(plm)
library(DT)
library(stargazer)
library(shiny)
library(hrbrthemes)
# FIXED-EFFECTS: TAB 1
# DATA PROCESSING AND READING FOR CAUSAL INFERENCE METHODS
rm(list = ls())
## FIXED-EFFECTS
data(Crime)
df<- Crime
dataCrime<-filter(df,county %in% c(1,3,7,23))
dataCrime_within<-dataCrime %>%
group_by(county) %>%
mutate(crime_within = crmrte - mean(crmrte),
prbarr_within = prbarr - mean(prbarr))
### LM MODEL WITH POOLED VS FIXED-EFFECTS
model_one<-lm(crmrte ~ prbarr, dataCrime)
model_two<-lm(crime_within ~ prbarr_within, dataCrime_within)
# EXTARCT COEFFICIENTS AND OTHER INFO
model_summary_one <- summary(model_one)
coefficients_df_one <- as.data.frame(model_summary_one$coefficients)
# Create a tibble
lm_tibble_one <- tibble(
term = rownames(coefficients_df_one),
estimate = round(coefficients_df_one$Estimate,3),
std_error = round(coefficients_df_one$`Std. Error`,3),
t_value = coefficients_df_one$t.value,
p_value = coefficients_df_one$`Pr(>|t|)`
)
model_summary_two <- summary(model_two)
coefficients_df_two <- as.data.frame(model_summary_two$coefficients)
# Create a tibble
lm_tibble_two <- tibble(
term = rownames(coefficients_df_two),
estimate = round(coefficients_df_two$Estimate,3),
std_error = round(coefficients_df_two$`Std. Error`,3),
t_value = coefficients_df_two$t.value,
p_value = coefficients_df_two$`Pr(>|t|)`
)
# MATCHING: TAB 2
# DATA PROCESSING
df_malaria<-list.files(getwd(),"/mosquito_nets.csv",full.names = T)
malaria_df<-read_csv(df_malaria)
# malaria_df$net<-as.factor(malaria_df$net)
df_malaria<-list.files(getwd(),"/mosquito_nets.csv",full.names = T)
paste0(getwd(),"/mosquito_nets.csv")
getwd()
malaria_df<-read_csv("https://github.com/rudymeza54/causal_inference/blob/main/mosquito_nets.csv")
View(malaria_df)
library(tidyverse)
library(plm)
library(DT)
library(stargazer)
library(shiny)
library(hrbrthemes)
# FIXED-EFFECTS: TAB 1
# DATA PROCESSING AND READING FOR CAUSAL INFERENCE METHODS
rm(list = ls())
## FIXED-EFFECTS
data(Crime)
df<- Crime
dataCrime<-filter(df,county %in% c(1,3,7,23))
dataCrime_within<-dataCrime %>%
group_by(county) %>%
mutate(crime_within = crmrte - mean(crmrte),
prbarr_within = prbarr - mean(prbarr))
### LM MODEL WITH POOLED VS FIXED-EFFECTS
model_one<-lm(crmrte ~ prbarr, dataCrime)
model_two<-lm(crime_within ~ prbarr_within, dataCrime_within)
# EXTARCT COEFFICIENTS AND OTHER INFO
model_summary_one <- summary(model_one)
coefficients_df_one <- as.data.frame(model_summary_one$coefficients)
# Create a tibble
lm_tibble_one <- tibble(
term = rownames(coefficients_df_one),
estimate = round(coefficients_df_one$Estimate,3),
std_error = round(coefficients_df_one$`Std. Error`,3),
t_value = coefficients_df_one$t.value,
p_value = coefficients_df_one$`Pr(>|t|)`
)
model_summary_two <- summary(model_two)
coefficients_df_two <- as.data.frame(model_summary_two$coefficients)
# Create a tibble
lm_tibble_two <- tibble(
term = rownames(coefficients_df_two),
estimate = round(coefficients_df_two$Estimate,3),
std_error = round(coefficients_df_two$`Std. Error`,3),
t_value = coefficients_df_two$t.value,
p_value = coefficients_df_two$`Pr(>|t|)`
)
# MATCHING: TAB 2
# DATA PROCESSING
url<-"https://github.com/rudymeza54/causal_inference/blob/main/mosquito_nets.csv"
malaria_df<-read_csv(gzcon(url))
install.packages("Rcurl")
install.packages("Rcurl")
install.packages("RCurl")
library(tidyverse)
library(plm)
library(DT)
library(stargazer)
library(shiny)
library(hrbrthemes)
library(RCurl)
# FIXED-EFFECTS: TAB 1
# DATA PROCESSING AND READING FOR CAUSAL INFERENCE METHODS
rm(list = ls())
## FIXED-EFFECTS
data(Crime)
df<- Crime
dataCrime<-filter(df,county %in% c(1,3,7,23))
dataCrime_within<-dataCrime %>%
group_by(county) %>%
mutate(crime_within = crmrte - mean(crmrte),
prbarr_within = prbarr - mean(prbarr))
### LM MODEL WITH POOLED VS FIXED-EFFECTS
model_one<-lm(crmrte ~ prbarr, dataCrime)
model_two<-lm(crime_within ~ prbarr_within, dataCrime_within)
# EXTARCT COEFFICIENTS AND OTHER INFO
model_summary_one <- summary(model_one)
coefficients_df_one <- as.data.frame(model_summary_one$coefficients)
# Create a tibble
lm_tibble_one <- tibble(
term = rownames(coefficients_df_one),
estimate = round(coefficients_df_one$Estimate,3),
std_error = round(coefficients_df_one$`Std. Error`,3),
t_value = coefficients_df_one$t.value,
p_value = coefficients_df_one$`Pr(>|t|)`
)
model_summary_two <- summary(model_two)
coefficients_df_two <- as.data.frame(model_summary_two$coefficients)
# Create a tibble
lm_tibble_two <- tibble(
term = rownames(coefficients_df_two),
estimate = round(coefficients_df_two$Estimate,3),
std_error = round(coefficients_df_two$`Std. Error`,3),
t_value = coefficients_df_two$t.value,
p_value = coefficients_df_two$`Pr(>|t|)`
)
# MATCHING: TAB 2
# DATA PROCESSING
url<-"https://github.com/rudymeza54/causal_inference/blob/main/mosquito_nets.csv"
csv_content <- getURL(url)
malaria_df <- read.csv(text = csv_content)
malaria_df$net<-as.factor(malaria_df$net)
install.packages("digest")
library(rsconnect)
rsconnect::setAccountInfo(name='rudy-meza', token='6BEDD0F68502A047378616F28739FB42', secret='pEKWodMi04A0rKy7fOYS6Y2qyfqPTdRTmRWFj0fS')
deployApp("C:/Users/rudym/OneDrive/Documents/causal_inference/flexdashboard","causal_inference.rmd")
0.7^2
getwd()
knitr::opts_chunk$set(echo = TRUE, message=F, warning=F, fig.width = 10)
knitr::include_graphics( "~IV_Fig1.png" )
knitr::include_graphics( "IV_Fig1.png" )
knitr::include_graphics( "instrumental Variables/healthoutcomes.png" )
knitr::include_graphics( "healthoutcomes.png" )
knitr::include_graphics( "IV_Fig1.png" )
